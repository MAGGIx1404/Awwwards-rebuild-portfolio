{"version":3,"file":"index.4c74f661e7da982afceb.js","mappings":"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","sources":["webpack://work-1/webpack/runtime/chunk loaded","webpack://work-1/./src/javascript/Experience/Utils/EventEmitter.js","webpack://work-1/./src/javascript/Experience/Utils/Time.js","webpack://work-1/./src/javascript/Experience/Utils/Sizes.js","webpack://work-1/./src/javascript/Experience/Utils/Stats.js","webpack://work-1/./src/javascript/Experience/Utils/Loader.js","webpack://work-1/./src/javascript/Experience/Resources.js","webpack://work-1/./src/javascript/Experience/Renderer.js","webpack://work-1/./src/javascript/Experience/Camera.js","webpack://work-1/./src/javascript/Experience/Sphere.js","webpack://work-1/./src/javascript/Experience/shaders/sphere/vertex.glsl","webpack://work-1/./src/javascript/Experience/shaders/sphere/fragment.glsl","webpack://work-1/./src/javascript/Experience/World.js","webpack://work-1/./src/javascript/Experience/assets.js","webpack://work-1/./src/javascript/Experience/Microphone.js","webpack://work-1/./src/javascript/Experience/Experience.js","webpack://work-1/./src/javascript/index.js","webpack://work-1/webpack/bootstrap","webpack://work-1/webpack/runtime/compat get default export","webpack://work-1/webpack/runtime/define property getters","webpack://work-1/webpack/runtime/hasOwnProperty shorthand","webpack://work-1/webpack/runtime/make namespace object","webpack://work-1/webpack/runtime/jsonp chunk loading","webpack://work-1/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export default class {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.callbacks = {};\n    this.callbacks.base = {};\n  }\n\n  /**\n   * On\n   */\n  on(_names, callback) {\n    const that = this;\n\n    // Errors\n    if (typeof _names === \"undefined\" || _names === \"\") {\n      console.warn(\"wrong names\");\n      return false;\n    }\n\n    if (typeof callback === \"undefined\") {\n      console.warn(\"wrong callback\");\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach(function (_name) {\n      // Resolve name\n      const name = that.resolveName(_name);\n\n      // Create namespace if not exist\n      if (!(that.callbacks[name.namespace] instanceof Object))\n        that.callbacks[name.namespace] = {};\n\n      // Create callback if not exist\n      if (!(that.callbacks[name.namespace][name.value] instanceof Array))\n        that.callbacks[name.namespace][name.value] = [];\n\n      // Add callback\n      that.callbacks[name.namespace][name.value].push(callback);\n    });\n\n    return this;\n  }\n\n  /**\n   * Off\n   */\n  off(_names) {\n    const that = this;\n\n    // Errors\n    if (typeof _names === \"undefined\" || _names === \"\") {\n      console.warn(\"wrong name\");\n      return false;\n    }\n\n    // Resolve names\n    const names = this.resolveNames(_names);\n\n    // Each name\n    names.forEach(function (_name) {\n      // Resolve name\n      const name = that.resolveName(_name);\n\n      // Remove namespace\n      if (name.namespace !== \"base\" && name.value === \"\") {\n        delete that.callbacks[name.namespace];\n      }\n\n      // Remove specific callback in namespace\n      else {\n        // Default\n        if (name.namespace === \"base\") {\n          // Try to remove from each namespace\n          for (const namespace in that.callbacks) {\n            if (\n              that.callbacks[namespace] instanceof Object &&\n              that.callbacks[namespace][name.value] instanceof Array\n            ) {\n              delete that.callbacks[namespace][name.value];\n\n              // Remove namespace if empty\n              if (Object.keys(that.callbacks[namespace]).length === 0)\n                delete that.callbacks[namespace];\n            }\n          }\n        }\n\n        // Specified namespace\n        else if (\n          that.callbacks[name.namespace] instanceof Object &&\n          that.callbacks[name.namespace][name.value] instanceof Array\n        ) {\n          delete that.callbacks[name.namespace][name.value];\n\n          // Remove namespace if empty\n          if (Object.keys(that.callbacks[name.namespace]).length === 0)\n            delete that.callbacks[name.namespace];\n        }\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Trigger\n   */\n  trigger(_name, _args) {\n    // Errors\n    if (typeof _name === \"undefined\" || _name === \"\") {\n      console.warn(\"wrong name\");\n      return false;\n    }\n\n    const that = this;\n    let finalResult = null;\n    let result = null;\n\n    // Default args\n    const args = !(_args instanceof Array) ? [] : _args;\n\n    // Resolve names (should on have one event)\n    let name = this.resolveNames(_name);\n\n    // Resolve name\n    name = this.resolveName(name[0]);\n\n    // Default namespace\n    if (name.namespace === \"base\") {\n      // Try to find callback in each namespace\n      for (const namespace in that.callbacks) {\n        if (\n          that.callbacks[namespace] instanceof Object &&\n          that.callbacks[namespace][name.value] instanceof Array\n        ) {\n          that.callbacks[namespace][name.value].forEach(function (callback) {\n            result = callback.apply(that, args);\n\n            if (typeof finalResult === \"undefined\") {\n              finalResult = result;\n            }\n          });\n        }\n      }\n    }\n\n    // Specified namespace\n    else if (this.callbacks[name.namespace] instanceof Object) {\n      if (name.value === \"\") {\n        console.warn(\"wrong name\");\n        return this;\n      }\n\n      that.callbacks[name.namespace][name.value].forEach(function (callback) {\n        result = callback.apply(that, args);\n\n        if (typeof finalResult === \"undefined\") finalResult = result;\n      });\n    }\n\n    return finalResult;\n  }\n\n  /**\n   * Resolve names\n   */\n  resolveNames(_names) {\n    let names = _names;\n    names = names.replace(/[^a-zA-Z0-9 ,/.]/g, \"\");\n    names = names.replace(/[,/]+/g, \" \");\n    names = names.split(\" \");\n\n    return names;\n  }\n\n  /**\n   * Resolve name\n   */\n  resolveName(name) {\n    const newName = {};\n    const parts = name.split(\".\");\n\n    newName.original = name;\n    newName.value = parts[0];\n    newName.namespace = \"base\"; // Base namespace\n\n    // Specified namespace\n    if (parts.length > 1 && parts[1] !== \"\") {\n      newName.namespace = parts[1];\n    }\n\n    return newName;\n  }\n}\n","import EventEmitter from './EventEmitter.js'\n\nexport default class Time extends EventEmitter\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super()\n\n        this.start = Date.now()\n        this.current = this.start\n        this.elapsed = 0\n        this.delta = 16\n        this.playing = true\n\n        this.tick = this.tick.bind(this)\n        this.tick()\n    }\n\n    play()\n    {\n        this.playing = true\n    }\n\n    pause()\n    {\n        this.playing = false\n    }\n\n    /**\n     * Tick\n     */\n    tick()\n    {\n        this.ticker = window.requestAnimationFrame(this.tick)\n\n        const current = Date.now()\n\n        this.delta = current - this.current\n        this.elapsed += this.playing ? this.delta : 0\n        this.current = current\n\n        if(this.delta > 60)\n        {\n            this.delta = 60\n        }\n\n        if(this.playing)\n        {\n            this.trigger('tick')\n        }\n    }\n\n    /**\n     * Stop\n     */\n    stop()\n    {\n        window.cancelAnimationFrame(this.ticker)\n    }\n}\n","import EventEmitter from './EventEmitter.js'\n\nexport default class Sizes extends EventEmitter\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super()\n\n        // Viewport size\n        this.viewport = {}\n        this.$sizeViewport = document.createElement('div')\n        this.$sizeViewport.style.width = '100vw'\n        this.$sizeViewport.style.height = '100vh'\n        this.$sizeViewport.style.position = 'absolute'\n        this.$sizeViewport.style.top = 0\n        this.$sizeViewport.style.left = 0\n        this.$sizeViewport.style.pointerEvents = 'none'\n\n        // Resize event\n        this.resize = this.resize.bind(this)\n        window.addEventListener('resize', this.resize)\n\n        this.resize()\n    }\n\n    /**\n     * Resize\n     */\n    resize()\n    {\n        document.body.appendChild(this.$sizeViewport)\n        this.viewport.width = this.$sizeViewport.offsetWidth\n        this.viewport.height = this.$sizeViewport.offsetHeight\n        document.body.removeChild(this.$sizeViewport)\n\n        this.width = window.innerWidth\n        this.height = window.innerHeight\n\n        this.trigger('resize')\n    }\n}\n","import StatsJs from \"stats.js\";\n\nexport default class Stats {\n  constructor(_active) {\n    this.instance = new StatsJs();\n    this.instance.showPanel(3);\n\n    this.active = false;\n    this.max = 40;\n    this.ignoreMaxed = true;\n\n    if (_active) {\n      this.activate();\n    }\n  }\n\n  activate() {\n    this.active = true;\n\n    document.body.appendChild(this.instance.dom);\n  }\n\n  deactivate() {\n    this.active = false;\n\n    document.body.removeChild(this.instance.dom);\n  }\n\n  setRenderPanel(_context) {\n    this.render = {};\n    this.render.context = _context;\n    this.render.extension = this.render.context.getExtension(\n      \"EXT_disjoint_timer_query_webgl2\"\n    );\n    this.render.panel = this.instance.addPanel(\n      new StatsJs.Panel(\"Render (ms)\", \"#f8f\", \"#212\")\n    );\n\n    const webGL2 =\n      typeof WebGL2RenderingContext !== \"undefined\" &&\n      _context instanceof WebGL2RenderingContext;\n\n    if (!webGL2 || !this.render.extension) {\n      this.deactivate();\n    }\n  }\n\n  beforeRender() {\n    if (!this.active) {\n      return;\n    }\n\n    // Setup\n    this.queryCreated = false;\n    let queryResultAvailable = false;\n\n    // Test if query result available\n    if (this.render.query) {\n      queryResultAvailable = this.render.context.getQueryParameter(\n        this.render.query,\n        this.render.context.QUERY_RESULT_AVAILABLE\n      );\n      const disjoint = this.render.context.getParameter(\n        this.render.extension.GPU_DISJOINT_EXT\n      );\n\n      if (queryResultAvailable && !disjoint) {\n        const elapsedNanos = this.render.context.getQueryParameter(\n          this.render.query,\n          this.render.context.QUERY_RESULT\n        );\n        const panelValue = Math.min(elapsedNanos / 1000 / 1000, this.max);\n\n        if (panelValue === this.max && this.ignoreMaxed) {\n        } else {\n          this.render.panel.update(panelValue, this.max);\n        }\n      }\n    }\n\n    // If query result available or no query yet\n    if (queryResultAvailable || !this.render.query) {\n      // Create new query\n      this.queryCreated = true;\n      this.render.query = this.render.context.createQuery();\n      this.render.context.beginQuery(\n        this.render.extension.TIME_ELAPSED_EXT,\n        this.render.query\n      );\n    }\n  }\n\n  afterRender() {\n    if (!this.active) {\n      return;\n    }\n\n    // End the query (result will be available \"later\")\n    if (this.queryCreated) {\n      this.render.context.endQuery(this.render.extension.TIME_ELAPSED_EXT);\n    }\n  }\n\n  update() {\n    if (!this.active) {\n      return;\n    }\n\n    this.instance.update();\n  }\n\n  destroy() {\n    this.deactivate();\n  }\n}\n","import EventEmitter from './EventEmitter.js'\nimport Experience from '../Experience.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js'\nimport { BasisTextureLoader } from 'three/examples/jsm/loaders/BasisTextureLoader.js'\n\nexport default class Resources extends EventEmitter\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        super()\n\n        this.experience = new Experience()\n        this.renderer = this.experience.renderer.instance\n\n        this.setLoaders()\n\n        this.toLoad = 0\n        this.loaded = 0\n        this.items = {}\n    }\n\n    /**\n     * Set loaders\n     */\n    setLoaders()\n    {\n        this.loaders = []\n\n        // Images\n        this.loaders.push({\n            extensions: ['jpg', 'png'],\n            action: (_resource) =>\n            {\n                const image = new Image()\n\n                image.addEventListener('load', () =>\n                {\n                    this.fileLoadEnd(_resource, image)\n                })\n\n                image.addEventListener('error', () =>\n                {\n                    this.fileLoadEnd(_resource, image)\n                })\n\n                image.src = _resource.source\n            }\n        })\n\n        // Basis images\n        const basisLoader = new BasisTextureLoader()\n        basisLoader.setTranscoderPath('basis/')\n        basisLoader.detectSupport(this.renderer)\n\n        this.loaders.push({\n            extensions: ['basis'],\n            action: (_resource) =>\n            {\n                basisLoader.load(_resource.source, (_data) =>\n                {\n                    this.fileLoadEnd(_resource, _data)\n                })\n            }\n        })\n\n        // Draco\n        const dracoLoader = new DRACOLoader()\n        dracoLoader.setDecoderPath('draco/')\n        dracoLoader.setDecoderConfig({ type: 'js' })\n\n        this.loaders.push({\n            extensions: ['drc'],\n            action: (_resource) =>\n            {\n                dracoLoader.load(_resource.source, (_data) =>\n                {\n                    this.fileLoadEnd(_resource, _data)\n\n                    DRACOLoader.releaseDecoderModule()\n                })\n            }\n        })\n\n        // GLTF\n        const gltfLoader = new GLTFLoader()\n        gltfLoader.setDRACOLoader(dracoLoader)\n\n        this.loaders.push({\n            extensions: ['glb', 'gltf'],\n            action: (_resource) =>\n            {\n                gltfLoader.load(_resource.source, (_data) =>\n                {\n                    this.fileLoadEnd(_resource, _data)\n                })\n            }\n        })\n\n        // FBX\n        const fbxLoader = new FBXLoader()\n\n        this.loaders.push({\n            extensions: ['fbx'],\n            action: (_resource) =>\n            {\n                fbxLoader.load(_resource.source, (_data) =>\n                {\n                    this.fileLoadEnd(_resource, _data)\n                })\n            }\n        })\n\n        // RGBE | HDR\n        const rgbeLoader = new RGBELoader()\n\n        this.loaders.push({\n            extensions: ['hdr'],\n            action: (_resource) =>\n            {\n                rgbeLoader.load(_resource.source, (_data) =>\n                {\n                    this.fileLoadEnd(_resource, _data)\n                })\n            }\n        })\n    }\n\n    /**\n     * Load\n     */\n    load(_resources = [])\n    {\n        for(const _resource of _resources)\n        {\n            this.toLoad++\n            const extensionMatch = _resource.source.match(/\\.([a-z]+)$/)\n\n            if(typeof extensionMatch[1] !== 'undefined')\n            {\n                const extension = extensionMatch[1]\n                const loader = this.loaders.find((_loader) => _loader.extensions.find((_extension) => _extension === extension))\n\n                if(loader)\n                {\n                    loader.action(_resource)\n                }\n                else\n                {\n                    console.warn(`Cannot found loader for ${_resource}`)\n                }\n            }\n            else\n            {\n                console.warn(`Cannot found extension of ${_resource}`)\n            }\n        }\n    }\n\n    /**\n     * File load end\n     */\n    fileLoadEnd(_resource, _data)\n    {\n        this.loaded++\n        this.items[_resource.name] = _data\n\n        this.trigger('fileEnd', [_resource, _data])\n\n        if(this.loaded === this.toLoad)\n        {\n            this.trigger('end')\n        }\n    }\n}\n","import * as THREE from \"three\";\nimport EventEmitter from \"./Utils/EventEmitter.js\";\nimport Loader from \"./Utils/Loader.js\";\n\nexport default class Resources extends EventEmitter {\n  constructor(_assets) {\n    super();\n\n    // Items (will contain every resources)\n    this.items = {};\n\n    // Loader\n    this.loader = new Loader({ renderer: this.renderer });\n\n    this.groups = {};\n    this.groups.assets = [..._assets];\n    this.groups.loaded = [];\n    this.groups.current = null;\n    this.loadNextGroup();\n\n    // Loader file end event\n    this.loader.on(\"fileEnd\", (_resource, _data) => {\n      let data = _data;\n\n      // Convert to texture\n      if (_resource.type === \"texture\") {\n        if (!(data instanceof THREE.Texture)) {\n          data = new THREE.Texture(_data);\n        }\n        data.needsUpdate = true;\n      }\n\n      this.items[_resource.name] = data;\n\n      // Progress and event\n      this.groups.current.loaded++;\n      this.trigger(\"progress\", [this.groups.current, _resource, data]);\n    });\n\n    // Loader all end event\n    this.loader.on(\"end\", () => {\n      this.groups.loaded.push(this.groups.current);\n\n      // Trigger\n      this.trigger(\"groupEnd\", [this.groups.current]);\n\n      if (this.groups.assets.length > 0) {\n        this.loadNextGroup();\n      } else {\n        this.trigger(\"end\");\n      }\n    });\n  }\n\n  loadNextGroup() {\n    this.groups.current = this.groups.assets.shift();\n    this.groups.current.toLoad = this.groups.current.items.length;\n    this.groups.current.loaded = 0;\n\n    this.loader.load(this.groups.current.items);\n  }\n\n  createInstancedMeshes(_children, _groups) {\n    // Groups\n    const groups = [];\n\n    for (const _group of _groups) {\n      groups.push({\n        name: _group.name,\n        regex: _group.regex,\n        meshesGroups: [],\n        instancedMeshes: [],\n      });\n    }\n\n    // Result\n    const result = {};\n\n    for (const _group of groups) {\n      result[_group.name] = _group.instancedMeshes;\n    }\n\n    return result;\n  }\n\n  destroy() {\n    for (const _itemKey in this.items) {\n      const item = this.items[_itemKey];\n      if (item instanceof THREE.Texture) {\n        item.dispose();\n      }\n    }\n  }\n}\n","import * as THREE from \"three\";\nimport Experience from \"./Experience.js\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\n\nexport default class Renderer {\n  constructor(_options = {}) {\n    this.experience = new Experience();\n    this.config = this.experience.config;\n    this.debug = this.experience.debug;\n    this.stats = this.experience.stats;\n    this.time = this.experience.time;\n    this.sizes = this.experience.sizes;\n    this.scene = this.experience.scene;\n    this.camera = this.experience.camera;\n\n    this.usePostprocess = true;\n\n    if (this.debug) {\n      this.debugFolder = this.debug.addFolder({\n        title: \"renderer\",\n      });\n    }\n\n    this.setInstance();\n    this.setPostProcess();\n  }\n\n  setInstance() {\n    this.clearColor = \"#010101\";\n\n    // Renderer\n    this.instance = new THREE.WebGLRenderer({\n      alpha: false,\n      antialias: true,\n    });\n    this.instance.domElement.style.position = \"absolute\";\n    this.instance.domElement.style.top = 0;\n    this.instance.domElement.style.left = 0;\n    this.instance.domElement.style.width = \"100%\";\n    this.instance.domElement.style.height = \"100%\";\n\n    // this.instance.setClearColor(0x414141, 1)\n    this.instance.setClearColor(this.clearColor, 1);\n    this.instance.setSize(this.config.width, this.config.height);\n    this.instance.setPixelRatio(this.config.pixelRatio);\n\n    // this.instance.physicallyCorrectLights = true\n    // this.instance.gammaOutPut = true\n    // this.instance.outputEncoding = THREE.sRGBEncoding\n    // this.instance.shadowMap.type = THREE.PCFSoftShadowMap\n    // this.instance.shadowMap.enabled = false\n    // this.instance.toneMapping = THREE.ReinhardToneMapping\n    // this.instance.toneMapping = THREE.ReinhardToneMapping\n    // this.instance.toneMappingExposure = 1.3\n\n    this.context = this.instance.getContext();\n\n    // Add stats panel\n    if (this.stats) {\n      this.stats.setRenderPanel(this.context);\n    }\n  }\n\n  setPostProcess() {\n    this.postProcess = {};\n\n    /**\n     * Passes\n     */\n    // Render pass\n    this.postProcess.renderPass = new RenderPass(\n      this.scene,\n      this.camera.instance\n    );\n\n    // Bloom pass\n    this.postProcess.unrealBloomPass = new UnrealBloomPass(\n      new THREE.Vector2(this.sizes.width, this.sizes.height),\n      0.8,\n      0.315,\n      0\n    );\n    this.postProcess.unrealBloomPass.enabled = true;\n\n    this.postProcess.unrealBloomPass.tintColor = {};\n    this.postProcess.unrealBloomPass.tintColor.value = \"#000\";\n    this.postProcess.unrealBloomPass.tintColor.instance = new THREE.Color(\n      this.postProcess.unrealBloomPass.tintColor.value\n    );\n\n    this.postProcess.unrealBloomPass.compositeMaterial.uniforms.uTintColor = {\n      value: this.postProcess.unrealBloomPass.tintColor.instance,\n    };\n    this.postProcess.unrealBloomPass.compositeMaterial.uniforms.uTintStrength =\n      { value: 0.15 };\n    this.postProcess.unrealBloomPass.compositeMaterial.fragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D blurTexture1;\nuniform sampler2D blurTexture2;\nuniform sampler2D blurTexture3;\nuniform sampler2D blurTexture4;\nuniform sampler2D blurTexture5;\nuniform sampler2D dirtTexture;\nuniform float bloomStrength;\nuniform float bloomRadius;\nuniform float bloomFactors[NUM_MIPS];\nuniform vec3 bloomTintColors[NUM_MIPS];\nuniform vec3 uTintColor;\nuniform float uTintStrength;\n\nfloat lerpBloomFactor(const in float factor) {\n    float mirrorFactor = 1.2 - factor;\n    return mix(factor, mirrorFactor, bloomRadius);\n}\n\nvoid main() {\n    vec4 color = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n        lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n        lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n        lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n        lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\n    color.rgb = mix(color.rgb, uTintColor, uTintStrength);\n    gl_FragColor = color;\n}\n        `;\n\n    if (this.debug) {\n      const debugFolder = this.debugFolder.addFolder({\n        title: \"UnrealBloomPass\",\n      });\n\n      debugFolder.addInput(this.postProcess.unrealBloomPass, \"enabled\", {});\n\n      debugFolder.addInput(this.postProcess.unrealBloomPass, \"strength\", {\n        min: 0,\n        max: 3,\n        step: 0.001,\n      });\n\n      debugFolder.addInput(this.postProcess.unrealBloomPass, \"radius\", {\n        min: 0,\n        max: 1,\n        step: 0.001,\n      });\n\n      debugFolder.addInput(this.postProcess.unrealBloomPass, \"threshold\", {\n        min: 0,\n        max: 1,\n        step: 0.001,\n      });\n\n      debugFolder\n        .addInput(this.postProcess.unrealBloomPass.tintColor, \"value\", {\n          view: \"uTintColor\",\n          label: \"color\",\n        })\n        .on(\"change\", () => {\n          this.postProcess.unrealBloomPass.tintColor.instance.set(\n            this.postProcess.unrealBloomPass.tintColor.value\n          );\n        });\n\n      debugFolder.addInput(\n        this.postProcess.unrealBloomPass.compositeMaterial.uniforms\n          .uTintStrength,\n        \"value\",\n        { label: \"uTintStrength\", min: 0, max: 1, step: 0.001 }\n      );\n    }\n\n    /**\n     * Effect composer\n     */\n    const RenderTargetClass =\n      this.config.pixelRatio >= 2\n        ? THREE.WebGLRenderTarget\n        : THREE.WebGLMultisampleRenderTarget;\n    // const RenderTargetClass = THREE.WebGLRenderTarget\n    this.renderTarget = new RenderTargetClass(\n      this.config.width,\n      this.config.height,\n      {\n        generateMipmaps: false,\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter,\n        format: THREE.RGBFormat,\n        encoding: THREE.sRGBEncoding,\n      }\n    );\n    this.postProcess.composer = new EffectComposer(\n      this.instance,\n      this.renderTarget\n    );\n    this.postProcess.composer.setSize(this.config.width, this.config.height);\n    this.postProcess.composer.setPixelRatio(this.config.pixelRatio);\n\n    this.postProcess.composer.addPass(this.postProcess.renderPass);\n    this.postProcess.composer.addPass(this.postProcess.unrealBloomPass);\n  }\n\n  resize() {\n    // Instance\n    this.instance.setSize(this.config.width, this.config.height);\n    this.instance.setPixelRatio(this.config.pixelRatio);\n\n    // Post process\n    this.postProcess.composer.setSize(this.config.width, this.config.height);\n    this.postProcess.composer.setPixelRatio(this.config.pixelRatio);\n  }\n\n  update() {\n    if (this.stats) {\n      this.stats.beforeRender();\n    }\n\n    if (this.usePostprocess) {\n      this.postProcess.composer.render();\n    } else {\n      this.instance.render(this.scene, this.camera.instance);\n    }\n\n    if (this.stats) {\n      this.stats.afterRender();\n    }\n  }\n\n  destroy() {\n    this.instance.renderLists.dispose();\n    this.instance.dispose();\n    this.renderTarget.dispose();\n    this.postProcess.composer.renderTarget1.dispose();\n    this.postProcess.composer.renderTarget2.dispose();\n  }\n}\n","import * as THREE from 'three'\nimport Experience from './Experience.js'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\nexport default class Camera\n{\n    constructor(_options)\n    {\n        // Options\n        this.experience = new Experience()\n        this.config = this.experience.config\n        this.debug = this.experience.debug\n        this.time = this.experience.time\n        this.sizes = this.experience.sizes\n        this.targetElement = this.experience.targetElement\n        this.scene = this.experience.scene\n\n        // Set up\n        this.mode = 'debug' // defaultCamera \\ debugCamera\n\n        this.setInstance()\n        this.setModes()\n    }\n\n    setInstance()\n    {\n        // Set up\n        this.instance = new THREE.PerspectiveCamera(25, this.config.width / this.config.height, 0.1, 15)\n        this.instance.rotation.reorder('YXZ')\n\n        this.scene.add(this.instance)\n    }\n\n    setModes()\n    {\n        this.modes = {}\n\n        // Default\n        this.modes.default = {}\n        this.modes.default.instance = this.instance.clone()\n        this.modes.default.instance.rotation.reorder('YXZ')\n\n        // Debug\n        this.modes.debug = {}\n        this.modes.debug.instance = this.instance.clone()\n        this.modes.debug.instance.rotation.reorder('YXZ')\n        this.modes.debug.instance.position.set(0, 0, 7)\n        \n        this.modes.debug.orbitControls = new OrbitControls(this.modes.debug.instance, this.targetElement)\n        this.modes.debug.orbitControls.enabled = this.modes.debug.active\n        this.modes.debug.orbitControls.screenSpacePanning = true\n        this.modes.debug.orbitControls.enableKeys = false\n        this.modes.debug.orbitControls.zoomSpeed = 0.25\n        this.modes.debug.orbitControls.enableDamping = true\n        this.modes.debug.orbitControls.update()\n    }\n\n\n    resize()\n    {\n        this.instance.aspect = this.config.width / this.config.height\n        this.instance.updateProjectionMatrix()\n\n        this.modes.default.instance.aspect = this.config.width / this.config.height\n        this.modes.default.instance.updateProjectionMatrix()\n\n        this.modes.debug.instance.aspect = this.config.width / this.config.height\n        this.modes.debug.instance.updateProjectionMatrix()\n    }\n\n    update()\n    {\n        // Update debug orbit controls\n        this.modes.debug.orbitControls.update()\n\n        // Apply coordinates\n        this.instance.position.copy(this.modes[this.mode].instance.position)\n        this.instance.quaternion.copy(this.modes[this.mode].instance.quaternion)\n        this.instance.updateMatrixWorld() // To be used in projection\n    }\n\n    destroy()\n    {\n        this.modes.debug.orbitControls.destroy()\n    }\n}\n","import * as THREE from \"three\";\nimport Experience from \"./Experience\";\nimport vertexShader from \"./shaders/sphere/vertex.glsl\";\nimport fragmentShader from \"./shaders/sphere/fragment.glsl\";\n\nexport default class Sphere {\n  constructor() {\n    this.experience = new Experience();\n    this.debug = this.experience.debug;\n    this.scene = this.experience.scene;\n    this.time = this.experience.time;\n    this.microphone = this.experience.microphone;\n\n    this.timeFrequency = 0.0003;\n    this.elapsedTime = 0;\n\n    if (this.debug) {\n      this.debugFolder = this.debug.addFolder({\n        title: \"sphere\",\n        expanded: true,\n      });\n\n      this.debugFolder.addInput(this, \"timeFrequency\", {\n        min: 0,\n        max: 0.001,\n        step: 0.000001,\n      });\n    }\n\n    this.setVariations();\n    this.setGeometry();\n    this.setLights();\n    this.setOffset();\n    this.setMaterial();\n    this.setMesh();\n  }\n\n  setVariations() {\n    this.variations = {};\n\n    this.variations.volume = {};\n    this.variations.volume.target = 0;\n    this.variations.volume.current = 0;\n    this.variations.volume.upEasing = 0.03;\n    this.variations.volume.downEasing = 0.002;\n    this.variations.volume.getValue = () => {\n      const level0 = this.microphone.levels[0] || 0;\n      const level1 = this.microphone.levels[1] || 0;\n      const level2 = this.microphone.levels[2] || 0;\n\n      return Math.max(level0, level1, level2) * 0.3;\n    };\n    this.variations.volume.getDefault = () => {\n      return 0.152;\n    };\n\n    this.variations.lowLevel = {};\n    this.variations.lowLevel.target = 0;\n    this.variations.lowLevel.current = 0;\n    this.variations.lowLevel.upEasing = 0.005;\n    this.variations.lowLevel.downEasing = 0.002;\n    this.variations.lowLevel.getValue = () => {\n      let value = this.microphone.levels[0] || 0;\n      value *= 0.003;\n      value += 0.0001;\n      value = Math.max(0, value);\n\n      return value;\n    };\n    this.variations.lowLevel.getDefault = () => {\n      return 0.0003;\n    };\n\n    this.variations.mediumLevel = {};\n    this.variations.mediumLevel.target = 0;\n    this.variations.mediumLevel.current = 0;\n    this.variations.mediumLevel.upEasing = 0.008;\n    this.variations.mediumLevel.downEasing = 0.004;\n    this.variations.mediumLevel.getValue = () => {\n      let value = this.microphone.levels[1] || 0;\n      value *= 2;\n      value += 3.587;\n      value = Math.max(3.587, value);\n\n      return value;\n    };\n    this.variations.mediumLevel.getDefault = () => {\n      return 3.587;\n    };\n\n    this.variations.highLevel = {};\n    this.variations.highLevel.target = 0;\n    this.variations.highLevel.current = 0;\n    this.variations.highLevel.upEasing = 0.02;\n    this.variations.highLevel.downEasing = 0.001;\n    this.variations.highLevel.getValue = () => {\n      let value = this.microphone.levels[2] || 0;\n      value *= 5;\n      value += 0.5;\n      value = Math.max(0.5, value);\n\n      return value;\n    };\n    this.variations.highLevel.getDefault = () => {\n      return 0.65;\n    };\n  }\n\n  setLights() {\n    this.lights = {};\n\n    // Light A\n    this.lights.a = {};\n\n    this.lights.a.intensity = 1.85;\n\n    this.lights.a.color = {};\n    this.lights.a.color.value = \"#ff3e00\";\n    this.lights.a.color.instance = new THREE.Color(this.lights.a.color.value);\n\n    this.lights.a.spherical = new THREE.Spherical(1, 0.615, 2.049);\n\n    // Light B\n    this.lights.b = {};\n\n    this.lights.b.intensity = 1.4;\n\n    this.lights.b.color = {};\n    this.lights.b.color.value = \"#0063ff\";\n    this.lights.b.color.instance = new THREE.Color(this.lights.b.color.value);\n\n    this.lights.b.spherical = new THREE.Spherical(1, 2.561, -1.844);\n\n    // Debug\n    if (this.debug) {\n      for (const _lightName in this.lights) {\n        const light = this.lights[_lightName];\n\n        const debugFolder = this.debugFolder.addFolder({\n          title: _lightName,\n          expanded: true,\n        });\n\n        debugFolder\n          .addInput(light.color, \"value\", { view: \"color\", label: \"color\" })\n          .on(\"change\", () => {\n            light.color.instance.set(light.color.value);\n          });\n\n        debugFolder\n          .addInput(light, \"intensity\", { min: 0, max: 10 })\n          .on(\"change\", () => {\n            this.material.uniforms[\n              `uLight${_lightName.toUpperCase()}Intensity`\n            ].value = light.intensity;\n          });\n\n        debugFolder\n          .addInput(light.spherical, \"phi\", {\n            label: \"phi\",\n            min: 0,\n            max: Math.PI,\n            step: 0.001,\n          })\n          .on(\"change\", () => {\n            this.material.uniforms[\n              `uLight${_lightName.toUpperCase()}Position`\n            ].value.setFromSpherical(light.spherical);\n          });\n\n        debugFolder\n          .addInput(light.spherical, \"theta\", {\n            label: \"theta\",\n            min: -Math.PI,\n            max: Math.PI,\n            step: 0.001,\n          })\n          .on(\"change\", () => {\n            this.material.uniforms.uLightAPosition.value.setFromSpherical(\n              light.spherical\n            );\n          });\n      }\n    }\n  }\n\n  setOffset() {\n    this.offset = {};\n    this.offset.spherical = new THREE.Spherical(\n      1,\n      Math.random() * Math.PI,\n      Math.random() * Math.PI * 2\n    );\n    this.offset.direction = new THREE.Vector3();\n    this.offset.direction.setFromSpherical(this.offset.spherical);\n  }\n\n  setGeometry() {\n    this.geometry = new THREE.SphereGeometry(1, 512, 512);\n    this.geometry.computeTangents();\n  }\n\n  setMaterial() {\n    this.material = new THREE.ShaderMaterial({\n      uniforms: {\n        uLightAColor: { value: this.lights.a.color.instance },\n        uLightAPosition: { value: new THREE.Vector3(1, 1, 0) },\n        uLightAIntensity: { value: this.lights.a.intensity },\n\n        uLightBColor: { value: this.lights.b.color.instance },\n        uLightBPosition: { value: new THREE.Vector3(-1, -1, 0) },\n        uLightBIntensity: { value: this.lights.b.intensity },\n\n        uSubdivision: {\n          value: new THREE.Vector2(\n            this.geometry.parameters.widthSegments,\n            this.geometry.parameters.heightSegments\n          ),\n        },\n\n        uOffset: { value: new THREE.Vector3() },\n\n        uDistortionFrequency: { value: 1.5 },\n        uDistortionStrength: { value: 0.65 },\n        uDisplacementFrequency: { value: 2.12 },\n        uDisplacementStrength: { value: 0.152 },\n\n        uFresnelOffset: { value: -1.609 },\n        uFresnelMultiplier: { value: 3.587 },\n        uFresnelPower: { value: 1.793 },\n\n        uTime: { value: 0 },\n      },\n      defines: {\n        USE_TANGENT: \"\",\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n\n    this.material.uniforms.uLightAPosition.value.setFromSpherical(\n      this.lights.a.spherical\n    );\n    this.material.uniforms.uLightBPosition.value.setFromSpherical(\n      this.lights.b.spherical\n    );\n\n    if (this.debug) {\n      this.debugFolder.addInput(\n        this.material.uniforms.uDistortionFrequency,\n        \"value\",\n        { label: \"uDistortionFrequency\", min: 0, max: 10, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(\n        this.material.uniforms.uDistortionStrength,\n        \"value\",\n        { label: \"uDistortionStrength\", min: 0, max: 10, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(\n        this.material.uniforms.uDisplacementFrequency,\n        \"value\",\n        { label: \"uDisplacementFrequency\", min: 0, max: 5, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(\n        this.material.uniforms.uDisplacementStrength,\n        \"value\",\n        { label: \"uDisplacementStrength\", min: 0, max: 1, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(\n        this.material.uniforms.uFresnelOffset,\n        \"value\",\n        { label: \"uFresnelOffset\", min: -2, max: 2, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(\n        this.material.uniforms.uFresnelMultiplier,\n        \"value\",\n        { label: \"uFresnelMultiplier\", min: 0, max: 5, step: 0.001 }\n      );\n\n      this.debugFolder.addInput(this.material.uniforms.uFresnelPower, \"value\", {\n        label: \"uFresnelPower\",\n        min: 0,\n        max: 5,\n        step: 0.001,\n      });\n    }\n  }\n\n  setMesh() {\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.mesh);\n  }\n\n  update() {\n    // Update variations\n    for (let _variationName in this.variations) {\n      const variation = this.variations[_variationName];\n      variation.target = this.microphone.ready\n        ? variation.getValue()\n        : variation.getDefault();\n\n      const easing =\n        variation.target > variation.current\n          ? variation.upEasing\n          : variation.downEasing;\n      variation.current +=\n        (variation.target - variation.current) * easing * this.time.delta;\n    }\n\n    // Time\n    this.timeFrequency = this.variations.lowLevel.current;\n    this.elapsedTime = this.time.delta * this.timeFrequency;\n\n    // Update material\n    this.material.uniforms.uDisplacementStrength.value =\n      this.variations.volume.current;\n    this.material.uniforms.uDistortionStrength.value =\n      this.variations.highLevel.current;\n    this.material.uniforms.uFresnelMultiplier.value =\n      this.variations.mediumLevel.current;\n\n    // Offset\n    const offsetTime = this.elapsedTime * 0.3;\n    this.offset.spherical.phi =\n      (Math.sin(offsetTime * 0.001) * Math.sin(offsetTime * 0.00321) * 0.5 +\n        0.5) *\n      Math.PI;\n    this.offset.spherical.theta =\n      (Math.sin(offsetTime * 0.0001) * Math.sin(offsetTime * 0.000321) * 0.5 +\n        0.5) *\n      Math.PI *\n      2;\n    this.offset.direction.setFromSpherical(this.offset.spherical);\n    this.offset.direction.multiplyScalar(this.timeFrequency * 2);\n\n    this.material.uniforms.uOffset.value.add(this.offset.direction);\n\n    // Time\n    this.material.uniforms.uTime.value += this.elapsedTime;\n  }\n}\n","export default \"#define GLSLIFY 1\\n#define M_PI 3.1415926535897932384626433832795\\n\\nuniform vec3 uLightAColor;\\nuniform vec3 uLightAPosition;\\nuniform float uLightAIntensity;\\nuniform vec3 uLightBColor;\\nuniform vec3 uLightBPosition;\\nuniform float uLightBIntensity;\\n\\nuniform vec2 uSubdivision;\\n\\nuniform vec3 uOffset;\\n\\nuniform float uDistortionFrequency;\\nuniform float uDistortionStrength;\\nuniform float uDisplacementFrequency;\\nuniform float uDisplacementStrength;\\n\\nuniform float uFresnelOffset;\\nuniform float uFresnelMultiplier;\\nuniform float uFresnelPower;\\n\\nuniform float uTime;\\n\\nvarying vec3 vColor;\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute_0(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt_0(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec4 fade_0(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat perlin4d(vec4 P){\\n  vec4 Pi0 = floor(P); // Integer part for indexing\\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute_0(permute_0(ix) + iy);\\n  vec4 ixy0 = permute_0(ixy + iz0);\\n  vec4 ixy1 = permute_0(ixy + iz1);\\n  vec4 ixy00 = permute_0(ixy0 + iw0);\\n  vec4 ixy01 = permute_0(ixy0 + iw1);\\n  vec4 ixy10 = permute_0(ixy1 + iw0);\\n  vec4 ixy11 = permute_0(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 / 7.0;\\n  vec4 gy00 = floor(gx00) / 7.0;\\n  vec4 gz00 = floor(gy00) / 6.0;\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 / 7.0;\\n  vec4 gy01 = floor(gx01) / 7.0;\\n  vec4 gz01 = floor(gy01) / 6.0;\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 / 7.0;\\n  vec4 gy10 = floor(gx10) / 7.0;\\n  vec4 gz10 = floor(gy10) / 6.0;\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 / 7.0;\\n  vec4 gy11 = floor(gx11) / 7.0;\\n  vec4 gz11 = floor(gy11) / 6.0;\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt_0(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt_0(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt_0(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt_0(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade_0(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\\n//\\tClassic Perlin 3D Noise \\n//\\tby Stefan Gustavson\\n//\\nvec4 permute_1(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt_1(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec3 fade_1(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat perlin3d(vec3 P)\\n{\\n    vec3 Pi0 = floor(P); // Integer part for indexing\\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n    Pi0 = mod(Pi0, 289.0);\\n    Pi1 = mod(Pi1, 289.0);\\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n    vec4 iz0 = Pi0.zzzz;\\n    vec4 iz1 = Pi1.zzzz;\\n\\n    vec4 ixy = permute_1(permute_1(ix) + iy);\\n    vec4 ixy0 = permute_1(ixy + iz0);\\n    vec4 ixy1 = permute_1(ixy + iz1);\\n\\n    vec4 gx0 = ixy0 / 7.0;\\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n    gx0 = fract(gx0);\\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n    vec4 sz0 = step(gz0, vec4(0.0));\\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n    vec4 gx1 = ixy1 / 7.0;\\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n    gx1 = fract(gx1);\\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n    vec4 sz1 = step(gz1, vec4(0.0));\\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n    vec4 norm0 = taylorInvSqrt_1(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n    g000 *= norm0.x;\\n    g010 *= norm0.y;\\n    g100 *= norm0.z;\\n    g110 *= norm0.w;\\n    vec4 norm1 = taylorInvSqrt_1(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n    g001 *= norm1.x;\\n    g011 *= norm1.y;\\n    g101 *= norm1.z;\\n    g111 *= norm1.w;\\n\\n    float n000 = dot(g000, Pf0);\\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n    float n111 = dot(g111, Pf1);\\n\\n    vec3 fade_xyz = fade_1(Pf0);\\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n    return 2.2 * n_xyz;\\n}\\n\\nvec3 getDisplacedPosition(vec3 _position)\\n{\\n    vec3 distoredPosition = _position;\\n    distoredPosition += perlin4d(vec4(distoredPosition * uDistortionFrequency + uOffset, uTime)) * uDistortionStrength;\\n\\n    float perlinStrength = perlin4d(vec4(distoredPosition * uDisplacementFrequency + uOffset, uTime));\\n    \\n    vec3 displacedPosition = _position;\\n    displacedPosition += normalize(_position) * perlinStrength * uDisplacementStrength;\\n\\n    return displacedPosition;\\n}\\n\\nvoid main()\\n{\\n    // Position\\n    vec3 displacedPosition = getDisplacedPosition(position);\\n    vec4 viewPosition = viewMatrix * vec4(displacedPosition, 1.0);\\n    gl_Position = projectionMatrix * viewPosition;\\n\\n    // Bi tangents\\n    float distanceA = (M_PI * 2.0) / uSubdivision.x;\\n    float distanceB = M_PI / uSubdivision.x;\\n\\n    vec3 biTangent = cross(normal, tangent.xyz);\\n\\n    vec3 positionA = position + tangent.xyz * distanceA;\\n    vec3 displacedPositionA = getDisplacedPosition(positionA);\\n\\n    vec3 positionB = position + biTangent.xyz * distanceB;\\n    vec3 displacedPositionB = getDisplacedPosition(positionB);\\n\\n    vec3 computedNormal = cross(displacedPositionA - displacedPosition.xyz, displacedPositionB - displacedPosition.xyz);\\n    computedNormal = normalize(computedNormal);\\n\\n    // Fresnel\\n    vec3 viewDirection = normalize(displacedPosition.xyz - cameraPosition);\\n    float fresnel = uFresnelOffset + (1.0 + dot(viewDirection, computedNormal)) * uFresnelMultiplier;\\n    fresnel = pow(max(0.0, fresnel), uFresnelPower);\\n\\n    // Color\\n    float lightAIntensity = max(0.0, - dot(computedNormal.xyz, normalize(- uLightAPosition))) * uLightAIntensity;\\n    float lightBIntensity = max(0.0, - dot(computedNormal.xyz, normalize(- uLightBPosition))) * uLightBIntensity;\\n\\n    vec3 color = vec3(0.0);\\n    color = mix(color, uLightAColor, lightAIntensity * fresnel);\\n    color = mix(color, uLightBColor, lightBIntensity * fresnel);\\n    color = mix(color, vec3(1.0), clamp(pow(max(0.0, fresnel - 0.8), 3.0), 0.0, 1.0));\\n\\n    // Varying\\n    vColor = color;\\n}\";","export default \"#define GLSLIFY 1\\nvarying vec3 vColor;\\n\\nvoid main()\\n{\\n    gl_FragColor = vec4(vColor, 1.0);\\n}\";","import * as THREE from \"three\";\nimport Experience from \"./Experience.js\";\nimport Sphere from \"./Sphere.js\";\n\nexport default class World {\n  constructor(_options) {\n    this.experience = new Experience();\n    this.config = this.experience.config;\n    this.scene = this.experience.scene;\n    this.resources = this.experience.resources;\n\n    this.resources.on(\"groupEnd\", (_group) => {\n      if (_group.name === \"base\") {\n        this.setSphere();\n      }\n    });\n  }\n\n  setSphere() {\n    this.sphere = new Sphere();\n  }\n\n  resize() {}\n\n  update() {\n    if (this.sphere) this.sphere.update();\n  }\n\n  destroy() {}\n}\n","export default [\n  {\n    name: \"base\",\n    data: {},\n    items: [\n      {\n        name: \"lennaTexture\",\n        source: \"./src/images/photo.jpg\",\n        type: \"texture\",\n      },\n    ],\n  },\n];\n","import Experience from './Experience.js'\n\nexport default class Microphone\n{\n    constructor()\n    {\n        this.experience = new Experience()\n        this.debug = this.experience.debug\n        this.ready = false\n        this.volume = 0\n        this.levels = []\n\n        navigator.mediaDevices\n            .getUserMedia({ audio: true, video: false })\n            .then((_stream) =>\n            {\n                this.stream = _stream\n\n                this.init()\n\n                if(this.debug)\n                {\n                    this.setSpectrum()\n                }\n            })\n    }\n\n    init()\n    {\n        this.audioContext = new AudioContext()\n        \n        this.mediaStreamSourceNode = this.audioContext.createMediaStreamSource(this.stream)\n        \n        this.analyserNode = this.audioContext.createAnalyser()\n        this.analyserNode.fftSize = 256\n        \n        this.mediaStreamSourceNode.connect(this.analyserNode)\n        \n        this.floatTimeDomainData = new Float32Array(this.analyserNode.fftSize)\n        this.byteFrequencyData = new Uint8Array(this.analyserNode.fftSize)\n        \n        this.ready = true\n    }\n\n    setSpectrum()\n    {\n        this.spectrum = {}\n\n        this.spectrum.width = this.analyserNode.fftSize\n        this.spectrum.height = 128\n        this.spectrum.halfHeight = Math.round(this.spectrum.height * 0.5)\n        \n        this.spectrum.canvas = document.createElement('canvas')\n        this.spectrum.canvas.width = this.spectrum.width\n        this.spectrum.canvas.height = this.spectrum.height\n        this.spectrum.canvas.style.position = 'fixed'\n        this.spectrum.canvas.style.left = 0\n        this.spectrum.canvas.style.bottom = 0\n        document.body.append(this.spectrum.canvas)\n\n        this.spectrum.context = this.spectrum.canvas.getContext('2d')\n        this.spectrum.context.fillStyle = '#ffffff'\n\n        this.spectrum.update = () =>\n        {\n            this.spectrum.context.clearRect(0, 0, this.spectrum.width, this.spectrum.height)\n\n            for(let i = 0; i < this.analyserNode.fftSize; i++)\n            {\n                const floatTimeDomainValue = this.floatTimeDomainData[i]\n                const byteFrequencyValue = this.byteFrequencyData[i]\n                const normalizeByteFrequencyValue = byteFrequencyValue / 255\n\n                const x = i\n                const y = this.spectrum.height - (normalizeByteFrequencyValue * this.spectrum.height)\n                const width = 1\n                // const height = floatTimeDomainValue * this.spectrum.height\n                const height = normalizeByteFrequencyValue * this.spectrum.height\n\n                this.spectrum.context.fillRect(x, y, width, height)\n            }\n        }\n    }\n\n    getLevels()\n    {\n        const bufferLength = this.analyserNode.fftSize\n        const levelCount = 8\n        const levelBins = Math.floor(bufferLength / levelCount)\n\n        const levels = []\n        let max = 0\n        \n        for(let i = 0; i < levelCount; i++)\n        {\n            let sum = 0\n\n            for(let j = 0; j < levelBins; j++)\n            {\n                sum +=  this.byteFrequencyData[(i * levelBins) + j]\n            }\n\n            const value = sum / levelBins / 256\n            levels[i] = value\n\n            if(value > max)\n                max = value\n        }\n\n        return levels\n    }\n\n    getVolume()\n    {\n        let sumSquares = 0.0\n        for(const amplitude of this.floatTimeDomainData)\n        {\n            sumSquares += amplitude * amplitude\n        }\n\n        return Math.sqrt(sumSquares / this.floatTimeDomainData.length)\n    }\n\n    update()\n    {\n        if(!this.ready)\n            return\n\n        // Retrieve audio data\n        this.analyserNode.getByteFrequencyData(this.byteFrequencyData)\n        this.analyserNode.getFloatTimeDomainData(this.floatTimeDomainData)\n        \n        this.volume = this.getVolume()\n        this.levels = this.getLevels()\n\n        // Spectrum\n        if(this.spectrum)\n            this.spectrum.update()\n    }\n}","import * as THREE from \"three\";\nimport { Pane } from \"tweakpane\";\n\nimport Time from \"./Utils/Time.js\";\nimport Sizes from \"./Utils/Sizes.js\";\nimport Stats from \"./Utils/Stats.js\";\n\nimport Resources from \"./Resources.js\";\nimport Renderer from \"./Renderer.js\";\nimport Camera from \"./Camera.js\";\nimport World from \"./World.js\";\n\nimport assets from \"./assets.js\";\nimport Microphone from \"./Microphone.js\";\n\nexport default class Experience {\n  static instance;\n\n  constructor(_options = {}) {\n    if (Experience.instance) {\n      return Experience.instance;\n    }\n    Experience.instance = this;\n\n    // Options\n    this.targetElement = _options.targetElement;\n\n    if (!this.targetElement) {\n      console.warn(\"Missing 'targetElement' property\");\n      return;\n    }\n\n    this.time = new Time();\n    this.sizes = new Sizes();\n    this.setConfig();\n    this.setStats();\n    this.setDebug();\n    this.setScene();\n    this.setCamera();\n    this.setRenderer();\n    this.setResources();\n    this.setMicrohopne();\n    this.setWorld();\n\n    this.sizes.on(\"resize\", () => {\n      this.resize();\n    });\n\n    this.update();\n  }\n\n  setConfig() {\n    this.config = {};\n\n    // Debug\n    this.config.debug = window.location.hash === \"#debug\";\n\n    // Pixel ratio\n    this.config.pixelRatio = Math.min(Math.max(window.devicePixelRatio, 1), 2);\n\n    // Width and height\n    const boundings = this.targetElement.getBoundingClientRect();\n    this.config.width = boundings.width;\n    this.config.height = boundings.height || window.innerHeight;\n  }\n\n  setStats() {\n    if (this.config.debug) {\n      this.stats = new Stats(true);\n    }\n  }\n\n  setDebug() {\n    if (this.config.debug) {\n      this.debug = new Pane();\n      this.debug.containerElem_.style.width = \"320px\";\n    }\n  }\n\n  setScene() {\n    this.scene = new THREE.Scene();\n  }\n\n  setCamera() {\n    this.camera = new Camera();\n  }\n\n  setRenderer() {\n    this.renderer = new Renderer({ rendererInstance: this.rendererInstance });\n\n    this.targetElement.appendChild(this.renderer.instance.domElement);\n  }\n\n  setResources() {\n    this.resources = new Resources(assets);\n  }\n\n  setMicrohopne() {\n    this.microphone = new Microphone();\n  }\n\n  setWorld() {\n    this.world = new World();\n  }\n\n  update() {\n    if (this.stats) this.stats.update();\n\n    this.camera.update();\n\n    if (this.microphone) this.microphone.update();\n\n    if (this.world) this.world.update();\n\n    if (this.renderer) this.renderer.update();\n\n    window.requestAnimationFrame(() => {\n      this.update();\n    });\n  }\n\n  resize() {\n    // Config\n    const boundings = this.targetElement.getBoundingClientRect();\n    this.config.width = boundings.width;\n    this.config.height = boundings.height;\n\n    this.config.pixelRatio = Math.min(Math.max(window.devicePixelRatio, 1), 2);\n\n    if (this.camera) this.camera.resize();\n\n    if (this.renderer) this.renderer.resize();\n\n    if (this.world) this.world.resize();\n\n    if (this.world) this.world.resize();\n  }\n\n  destroy() {}\n}\n","import * as THREE from \"three\";\r\nimport \"../css/style.css\";\r\nimport \"../css/index.css\";\r\nimport html from \"../index.html\";\r\nimport { gsap, Expo } from \"gsap\";\r\nimport Experience from \"./Experience/Experience.js\";\r\n\r\nconst select = (e) => document.querySelector(e);\r\nconst selectAll = (e) => document.querySelectorAll(e);\r\n\r\nconst experience = new Experience({\r\n  targetElement: document.querySelector(\".experience\"),\r\n});\r\n\r\n// page transitions\r\n\r\nconst loader = select(\".loader\");\r\nconst innerLoader = select(\".inner-loader\");\r\nconst spans = selectAll(\".inner-loader h1 span\");\r\nconst overlay = select(\".overlay\");\r\n\r\nfunction pageLoader() {\r\n  const tl = gsap.timeline();\r\n  gsap.set(loader, {\r\n    y: \"0\",\r\n  });\r\n  gsap.set(innerLoader, {\r\n    opacity: 1,\r\n  });\r\n  tl.to(spans, 1.2, {\r\n    delay: 5,\r\n    rotation: 1000,\r\n    y: \"-100%\",\r\n    opacity: 0,\r\n    ease: \"back\",\r\n    stagger: 0.2,\r\n  });\r\n  tl.to(loader, 1.2, {\r\n    y: \"-100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n}\r\n\r\n// main loading do only one time\r\nif (localStorage.getItem(\"first\") === null) {\r\n  pageLoader();\r\n  localStorage.setItem(\"first\", \"nope!\");\r\n}\r\n\r\n// localStorage.clear();\r\n\r\n// overlay events\r\nfunction initOverlay() {\r\n  const tl = gsap.timeline();\r\n  tl.fromTo(\r\n    overlay,\r\n    1,\r\n    {\r\n      y: \"0\",\r\n      ease: Expo.easeInOut,\r\n    },\r\n    {\r\n      y: \"-100%\",\r\n      ease: Expo.easeInOut,\r\n    }\r\n  );\r\n}\r\n\r\n// on load event\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  initOverlay();\r\n});\r\n\r\n// transition\r\n\r\nconst anchors = document.querySelectorAll(\".transition-btn\");\r\n\r\nfor (let i = 0; i < anchors.length; i++) {\r\n  const anchor = anchors[i];\r\n\r\n  anchor.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    let target = e.target;\r\n\r\n    if (target.nodeName === \"SPAN\") {\r\n      target = target.parentElement.href;\r\n    }\r\n\r\n    const tl = gsap.timeline();\r\n\r\n    tl.to(overlay, 1, {\r\n      y: \"0\",\r\n      ease: Expo.easeInOut,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      window.location.href = target;\r\n    }, 1100);\r\n  });\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwork_1\"] = self[\"webpackChunkwork_1\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [716,850], () => (__webpack_require__(193)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","this","callbacks","base","_names","callback","that","console","warn","resolveNames","forEach","_name","name","resolveName","namespace","Object","value","Array","push","keys","length","_args","finalResult","result","args","apply","names","replace","split","newName","parts","original","Time","start","Date","now","current","elapsed","delta","playing","tick","bind","ticker","window","requestAnimationFrame","trigger","cancelAnimationFrame","EventEmitter","Sizes","viewport","$sizeViewport","document","createElement","style","width","height","position","top","left","pointerEvents","resize","addEventListener","body","appendChild","offsetWidth","offsetHeight","removeChild","innerWidth","innerHeight","Stats","_active","instance","StatsJs","showPanel","active","max","ignoreMaxed","activate","dom","_context","render","context","extension","getExtension","panel","addPanel","WebGL2RenderingContext","deactivate","queryCreated","queryResultAvailable","query","getQueryParameter","QUERY_RESULT_AVAILABLE","disjoint","getParameter","GPU_DISJOINT_EXT","elapsedNanos","QUERY_RESULT","panelValue","Math","min","update","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","Resources","experience","Experience","renderer","setLoaders","toLoad","loaded","items","loaders","extensions","action","_resource","image","Image","fileLoadEnd","src","source","basisLoader","BasisTextureLoader","setTranscoderPath","detectSupport","load","_data","dracoLoader","DRACOLoader","setDecoderPath","setDecoderConfig","type","gltfLoader","GLTFLoader","setDRACOLoader","fbxLoader","FBXLoader","rgbeLoader","RGBELoader","_resources","extensionMatch","match","loader","find","_loader","_extension","_assets","Loader","groups","assets","loadNextGroup","on","data","THREE","needsUpdate","shift","_children","_groups","_group","regex","meshesGroups","instancedMeshes","_itemKey","item","dispose","Renderer","config","debug","stats","time","sizes","scene","camera","usePostprocess","debugFolder","addFolder","title","setInstance","setPostProcess","clearColor","alpha","antialias","domElement","setClearColor","setSize","setPixelRatio","pixelRatio","getContext","setRenderPanel","postProcess","renderPass","RenderPass","unrealBloomPass","UnrealBloomPass","enabled","tintColor","compositeMaterial","uniforms","uTintColor","uTintStrength","fragmentShader","addInput","step","view","label","set","RenderTargetClass","renderTarget","generateMipmaps","minFilter","magFilter","format","encoding","composer","EffectComposer","addPass","beforeRender","afterRender","renderLists","renderTarget1","renderTarget2","Camera","_options","targetElement","mode","setModes","rotation","reorder","add","modes","clone","orbitControls","OrbitControls","screenSpacePanning","enableKeys","zoomSpeed","enableDamping","aspect","updateProjectionMatrix","copy","quaternion","updateMatrixWorld","destroy","Sphere","microphone","timeFrequency","elapsedTime","expanded","setVariations","setGeometry","setLights","setOffset","setMaterial","setMesh","variations","volume","target","upEasing","downEasing","getValue","level0","levels","level1","level2","getDefault","lowLevel","mediumLevel","highLevel","lights","a","intensity","color","spherical","b","_lightName","light","material","toUpperCase","PI","setFromSpherical","uLightAPosition","offset","random","direction","geometry","computeTangents","uLightAColor","uLightAIntensity","uLightBColor","uLightBPosition","uLightBIntensity","uSubdivision","parameters","widthSegments","heightSegments","uOffset","uDistortionFrequency","uDistortionStrength","uDisplacementFrequency","uDisplacementStrength","uFresnelOffset","uFresnelMultiplier","uFresnelPower","uTime","defines","USE_TANGENT","vertexShader","mesh","_variationName","variation","ready","easing","offsetTime","phi","sin","theta","multiplyScalar","World","resources","setSphere","sphere","Microphone","navigator","mediaDevices","getUserMedia","audio","video","then","_stream","stream","init","setSpectrum","audioContext","AudioContext","mediaStreamSourceNode","createMediaStreamSource","analyserNode","createAnalyser","fftSize","connect","floatTimeDomainData","Float32Array","byteFrequencyData","Uint8Array","spectrum","halfHeight","round","canvas","bottom","append","fillStyle","clearRect","i","normalizeByteFrequencyValue","x","y","fillRect","bufferLength","levelBins","floor","sum","j","sumSquares","amplitude","sqrt","getByteFrequencyData","getFloatTimeDomainData","getVolume","getLevels","setConfig","setStats","setDebug","setScene","setCamera","setRenderer","setResources","setMicrohopne","setWorld","location","hash","devicePixelRatio","boundings","getBoundingClientRect","Pane","containerElem_","rendererInstance","world","e","tl","select","querySelector","innerLoader","spans","querySelectorAll","overlay","localStorage","getItem","gsap","opacity","to","delay","ease","stagger","Expo","setItem","fromTo","anchors","preventDefault","nodeName","parentElement","href","setTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}